# application-heroku.properties
# Configuration pour le profil heroku avec postgresql
# On indique uniquement les diff\u00c3\u00a9rences avec application.properties
# On peut auto-s\u00c3\u00a9lectionner ce profil sur heroku en positionnant 
# la variable d'environnement SPRING_PROFILES_ACTIVE
# heroku config:set SPRING_PROFILES_ACTIVE=heroku
# heroku configure automatiquement la variable d'environnement DATABASE_URL
spring.datasource.url=${DATABASE_URL}

# Comment hibernate doit recr\u00c3\u00a9er le sch\u00c3\u00a9ma de la BD
# On ne recr\u00c3\u00a9e pas la base de donn\u00c3\u00a9e \u00c3\u00a0 chaque d\u00c3\u00a9marrage, \u00c3\u00a9ventuellement on met \u00c3\u00a0 jour le sch\u00c3\u00a9ma
spring.jpa.hibernate.ddl-auto=update

# On sp\u00c3\u00a9cifie le dialecte pour postgresql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.show-sql=true

# Configuration des logs
logging.level.web=ERROR
# Montrer le d\u00c3\u00a9tail des param\u00c3\u00a8tres HTTP transmis dans les logs
spring.mvc.log-request-details=false

# cf. https://www.baeldung.com/sql-logging-spring-boot
# Configuration des logs SQL JPA
logging.level.org.hibernate.SQL=ERROR
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n